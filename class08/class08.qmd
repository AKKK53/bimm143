---
title: "class 08: Machine Learning Miniproject"
author: "Jenny Zhou"
format: pdf
---

# Breast Cancer Project
Today we are going to explore some data from the University of Wisconsin Cancer Center on Breast biopsy data.

```{r}
wisc.data <-read.csv("WisconsinCancer.csv", row.names=1)
head(wisc.data)
```

> Q1. How many observations are in this dataset?

```{r}
nrow(wisc.data)
```
There are `r nrow(wisc.data)` patients in this dataset.


> Q2. Count the malignant(M) and benign(B) in diagnosis. How many of the observations have a malignant diagnosis?

```{r}
table(wisc.data$diagnosis)
```

Save the diagnosis for later use as a reference to comopare how well we do with PCA etc.



```{r}
diagnosis <- as.factor(wisc.data$diagnosis)
diagnosis
```

Now exclude diagnosis column from the dataset.
```{r}
no.diag <- wisc.data[,-1]
```

> Q. How many variables are there in the dataset?

```{r}
ncol(no.diag)
```
There are `r ncol(no.diag)`variables.


# Principal Component Analysis (PCA)

To perform PCA in R, we can use the `prcomp()` function. 
It takes as input a numeric dataset and optional `scale=TRUE/FALSE` argument.


We generally always want to set `scale=TRUE`but let's make sure by checking if the mean and standard deviation values are very different across these 30 variables.
```{r}
round(colMeans(no.diag),2)

```
As means are quite viaried, we want to use `scale=TRUE`


```{r}
pca <- prcomp(no.diag, scale=TRUE)
summary(pca)
```
```{r}
attributes(pca)
```
Plot PC2 against PC1.
```{r}
plot(pca$x[,1],pca$x[,2],col=diagnosis)
```

Plot PC2 against PC1 with ggplot.
```{r}
library(ggplot2)

ggplot(as.data.frame(pca$x)) +
  aes(PC1,PC2,col=diagnosis) +
  geom_point()
```


> Q. How much variance is captured in the top 3 PCs.

They capture 76.636% of total variance.




rotation is the influence of each of the original **variables** upon the principal components (typically known as loading scores)

> Q9. For the first principal component, what is the component of the loading vector (i.e. wisc.pr$rotation[,1]) for the feature concave.points_mean? This tells us how much this original feature contributes to the first PC.

```{r}
pca$rotation["concave.points_mean",1]
```

# Combine PCA results with clustering

We can use new PCA variables (i.e. the scores along the PCs contained in `pca$x`) as input for other methods such as clustering.

```{r}
#hclust need distance matrix as input
d <- dist(pca$x[,1:3])
hc <- hclust(d, method="ward.D2")
plot(hc)
```

To get our cluster membership vector we can use the `cutree()` function and specify a height(`h`) or numbder of groups (`k`) in arguments.
```{r}
grps <- cutree(hc,k=2)
table(grps)

```

I want to find out how many benign("B") and malignant("M") are in each group
```{r}
table(diagnosis,grps)
```

We can also make a plot using clustering factor `grps`

```{r}
ggplot(as.data.frame(pca$x)) +
  aes(PC1,PC2,col=factor(grps)) +
  geom_point()
```

> Q15. OPTIONAL: Which of your analysis procedures resulted in a clustering model with the best specificity? How about sensitivity?

**Sensitivity** refers to a test’s ability to correctly detect ill patients who do have the condition. In our example here the sensitivity is the total number of samples in the cluster identified as predominantly malignant (cancerous) divided by the total number of known malignant samples. In other words: TP/(TP+FN).

**Specificity** relates to a test’s ability to correctly reject healthy patients without a condition. In our example specificity is the proportion of benign (not cancerous) samples in the cluster identified as predominantly benign that are known to be benign. In other words: TN/(TN+FN).

```{r}
179/(179+33)
333/(333+24)
```


Sensitivity = TP/(TP+FN) = 179/(179+33) = `r 179/(179+33)`

Specificity = TN/(TN+FN) = 333/(333+24) = `r 333/(333+24)`


# Prediction


```{r}

url <- "https://tinyurl.com/new-samples-CSV"
new <- read.csv(url)
npc <- predict(pca, newdata=new)
npc #Position of newdata on different PC axis.
```

```{r}
plot(pca$x[,1:2],col=grps)
points(npc[,1], npc[,2], col="blue", pch=16, cex=3)
text(npc[,1], npc[,2], c(1,2), col="white")
```

> Q16. Which of these new patients should we prioritize for follow up based on your results?

We should prioritize patient 2. Patient 2's position on the plot is in the clustering of group 1 in `grps`, in which most of them have malignant tumor. Meanwhile, patient 1's position on the plot is in the clustering of group 2 in `grps`, in which most of them have benign tumor.